- name: update-alternatives for kitty default shell
  become_user: root
  shell: "update-alternatives --install `which x-terminal-emulator` x-terminal-emulator `which kitty` 50"
  ignore_errors: yes
  tags:
    - install
    - desktop
    - kitty

- name: ensure git directory
  file:
    path: "{{ lookup('env', 'HOME') }}/git"
    state: directory

- name: ensure work directory
  file:
    path: "{{ lookup('env', 'HOME') }}/work"
    state: directory

- name: check is polybar installed
  shell: command -v polybar
  register: polybar_exists
  ignore_errors: yes
  tags:
    - desktop
    - polybar
    - install

- name: install polybar
  tags:
    - desktop
    - install
    - polybar
  when: polybar_exists is failed
  block:
  - name: install polybar dependencies
    become_user: root
    apt:
      name:
        - cmake
        - cmake-data
        - libcairo2-dev
        - libjsoncpp-dev
        - libxcb-composite0-dev
        - libxcb-ewmh-dev
        - libxcb-randr0-dev
        - libxcb1-dev
        - python3-sphinx
        - python3-xcbgen
        - xcb-proto
        - libasound2-dev
        - libcurl4-openssl-dev
        - libmpdclient-dev
        - python3-packaging
        - libuv1-dev
        - libxcb-util0-dev
        - libxcb-image0-dev
        - libxcb-icccm4-dev
        - libiw-dev
        - libpulse-dev
  - name: clone polybar
    ansible.builtin.git:
      repo: 'https://github.com/jaagr/polybar.git'
      dest: "{{ lookup('env', 'HOME') }}/git/polybar"
      update: no

- name: install i3lock-color
  tags:
    - desktop
    - install
    - i3lock
  block:
  - name: install i3lock-color dependencies
    become_user: root
    apt:
      name:
        - gcc
        - make
        - libpam0g-dev
        - libfontconfig1-dev
        - libev-dev
        - libx11-xcb-dev
        - libxcb-xkb-dev
        - libxcb-xinerama0-dev
        - libxcb-util-dev
        - libxcb-xrm-dev
        - libxcb-xtest0-dev
        - libxkbcommon-dev
        - libxkbcommon-x11-dev
        - libjpeg-dev
        - scrot
        - imagemagick
  - name: clone i3lock-color
    ansible.builtin.git:
      repo: 'https://github.com/Raymo111/i3lock-color.git'
      dest: "{{ lookup('env', 'HOME') }}/git/i3-lock-color"
      update: no

- name: install picom
  tags:
    - desktop
    - install
    - picom
  block:
  - name: install picom dependencies
    become_user: root
    apt:
      name:
        - libxext-dev
        - libxcb1-dev
        - libxcb-damage0-dev
        - libxcb-xfixes0-dev
        - libxcb-shape0-dev
        - libxcb-render-util0-dev
        - libxcb-render0-dev
        - libxcb-randr0-dev
        - libxcb-composite0-dev
        - libxcb-image0-dev
        - libxcb-present-dev
        - libxcb-xinerama0-dev
        - libxcb-glx0-dev
        - libpixman-1-dev
        - libdbus-1-dev
        - libconfig-dev
        - libgl1-mesa-dev
        - libpcre2-dev
        - libpcre3-dev
        - libevdev-dev
        - uthash-dev
        - libev-dev
        - libx11-xcb-dev
        - meson
  - name: clone picom blur
    ansible.builtin.git:
      repo: 'https://github.com/ibhagwan/picom'
      dest: "{{ lookup('env', 'HOME') }}/git/picom"
      update: no

- name: install rofi applet
  tags:
    - desktop
    - install
    - rofi
  block:
  - name: clone rofi theme
    ansible.builtin.git:
      repo: 'https://github.com/adi1090x/rofi'
      dest: "{{ lookup('env', 'HOME') }}/git/rofi"
      depth: 1
      update: no

- name: install tmux-plugins manager
  tags:
    - desktop
    - install
    - tmux
  block:
  - name: clone tmux plugin manager
    ansible.builtin.git:
      repo: 'https://github.com/tmux-plugins/tpm'
      dest: "{{ lookup('env', 'HOME') }}/.tmux/plugins/tpm"
      update: no

- name: Create themes dir if it does not exist
  file:
    path: "{{ lookup('env', 'HOME') }}/.themes"
    state: directory
    mode: '0755'
  tags:
    - install
    - desktop

- name: Create icons dir if it does not exist
  file:
    path: "{{ lookup('env', 'HOME') }}/.icons"
    state: directory
    mode: '0755'
  tags:
    - install
    - desktop

- name: Extract serenade in themes
  ansible.builtin.unarchive:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/themes/serenade.zip"
    dest: "{{ lookup('env', 'HOME') }}/.themes"
  tags:
    - install
    - desktop

- name: Extract Flatery in icons
  ansible.builtin.unarchive:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/themes/Flatery.zip"
    dest: "{{ lookup('env', 'HOME') }}/.icons"
  tags:
    - install
    - desktop

- name: Remove Animation GTK
  shell: gsettings set org.gnome.desktop.interface enable-animations false
  tags:
    - install
    - desktop

- name: change GTK theme to Serenade
  shell: gsettings set org.gnome.desktop.interface gtk-theme serenade
  tags:
    - install
    - desktop

- name: change Windows manager theme to Serenade
  shell: gsettings set org.gnome.desktop.wm.preferences theme serenade
  tags:
    - install
    - desktop

- name: change GTK icons to Flatery
  shell: gsettings set org.gnome.desktop.interface icon-theme Flatery
  tags:
    - install
    - desktop

- name: Install real program dvorak layout
  shell: sudo cp ~/.config/xkb/symbols/real-prog-dvorak /usr/share/X11/xkb/symbols/real-prog-dvorak
  tags:
    - install
    - desktop
    - layout

- name: install spotify package
  become_user: root
  shell: "curl -sS https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg | sudo apt-key add - && echo 'deb http://repository.spotify.com stable non-free' | sudo tee /etc/apt/sources.list.d/spotify.list && sudo apt-get update"
  tags:
    - install
    - desktop
    - spotify

- name: Install Spotify
  become_user: root
  apt:
    name: "spotify-client"
    update_cache: yes
  tags:
    - install
    - desktop
    - spotify

- name: install 1password package
  become_user: root
  shell: "curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg &&  echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main' | sudo tee /etc/apt/sources.list.d/1password.list"
  tags:
    - install
    - desktop
    - 1password

- name: install 1password debsig verify
  become_user: root
  shell: "sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/ && curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol && sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22 && curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg &&  sudo apt update"
  tags:
    - install
    - desktop
    - 1password

- name: Install 1password
  become_user: root
  apt:
    name: "1password"
    update_cache: yes
  tags:
    - install
    - desktop
    - 1password
