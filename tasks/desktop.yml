- name: update-alternatives for kitty default shell
  become_user: root
  shell: "update-alternatives --install `which x-terminal-emulator` x-terminal-emulator `which kitty` 50"
  ignore_errors: yes
  tags:
    - install
    - desktop
    - kitty

- name: ensure git directory
  file:
    path: "{{ lookup('env', 'HOME') }}/git"
    state: directory

- name: ensure work directory
  file:
    path: "{{ lookup('env', 'HOME') }}/work"
    state: directory

- name: check is polybar installed
  shell: command -v polybar
  register: polybar_exists
  ignore_errors: yes
  tags:
    - desktop
    - polybar
    - install

- name: install polybar
  tags:
    - desktop
    - install
    - polybar
  when: polybar_exists is failed
  block:
  - name: install polybar dependencies
    become_user: root
    apt:
      name:
        - cmake
        - cmake-data
        - libcairo2-dev
        - libjsoncpp-dev
        - 'libxcb-*'
        - libxcb-composite0-dev
        - libxcb-ewmh-dev
        - libxcb-randr0-dev
        - libxcb1-dev
        - python3-sphinx
        - python3-xcbgen
        - xcb-proto
  - name: clone polybar
    ansible.builtin.git:
      repo: 'https://github.com/jaagr/polybar.git'
      dest: "{{ lookup('env', 'HOME') }}/git/polybar"
      update: no
  - name: install polybar
    shell: |
      sudo ln -s /usr/include/jsoncpp/json/ /usr/include/json
      cd {{ lookup('env', 'HOME') }}/git/polybar
      ./build.sh

- name: Create themes dir if it does not exist
  file:
    path: "{{ lookup('env', 'HOME') }}/.themes"
    state: directory
    mode: '0755'
  tags:
    - install
    - desktop

- name: Create icons dir if it does not exist
  file:
    path: "{{ lookup('env', 'HOME') }}/.icons"
    state: directory
    mode: '0755'
  tags:
    - install
    - desktop

- name: Extract serenade in themes
  ansible.builtin.unarchive:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/themes/serenade.zip"
    dest: "{{ lookup('env', 'HOME') }}/.themes"
  tags:
    - install
    - desktop

- name: Extract Flatery in icons
  ansible.builtin.unarchive:
    src: "{{ lookup('env', 'HOME') }}/.dotfiles/themes/Flatery.zip"
    dest: "{{ lookup('env', 'HOME') }}/.icons"
  tags:
    - install
    - desktop

- name: Remove Animation GTK
  shell: gsettings set org.gnome.desktop.interface enable-animations false
  tags:
    - install
    - desktop

- name: change GTK theme to Serenade
  shell: gsettings set org.gnome.desktop.interface gtk-theme serenade
  tags:
    - install
    - desktop

- name: change Windows manager theme to Serenade
  shell: gsettings set org.gnome.desktop.wm.preferences theme serenade
  tags:
    - install
    - desktop

- name: change GTK icons to Flatery
  shell: gsettings set org.gnome.desktop.interface icon-theme Flatery
  tags:
    - install
    - desktop
